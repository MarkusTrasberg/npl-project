{"ast":null,"code":"var _jsxFileName = \"/media/nlonyuk/Ubuntu/tu/nlp/nlp_demo/frontend/src/Form.js\",\n  _s = $RefreshSig$();\nimport \"./Form.css\";\nimport Button from \"react-bootstrap/esm/Button\";\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport React, { useState } from 'react';\nimport PresentResponse from './Response';\nimport FormText from \"react-bootstrap/esm/FormText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GridBasicExample() {\n  _s();\n  const [value, setValue] = React.useState(70);\n  const [type, setType] = React.useState([]);\n  const [project, setProject] = useState([]);\n  const [PresentResponse] = useState([]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    id: \"MainForm\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Form.Text, {\n        children: \"Select model\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Form.Select, {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Model1\",\n          children: \"Model1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Model2\",\n          children: \"Model2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Model3\",\n          children: \"Model3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Form.Text, {\n        children: \"Select # of samples to train from\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(RangeSlider, {\n            value: value,\n            step: 10,\n            min: 0,\n            max: 100,\n            onChange: e => setValue(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"3\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Text, {\n          children: \"Select tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"switch\",\n          id: \"task1-switch\",\n          label: \"Task1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"switch\",\n          id: \"task2-switch\",\n          label: \"Task2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"switch\",\n          id: \"task3-switch\",\n          label: \"Task3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        value: \"Add Todo\",\n        onClick: async event => {\n          event.preventDefault();\n          const requestOptions = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              title: 'React POST Request Example'\n            })\n          };\n          fetch('https://reqres.in/api/posts', requestOptions).then(res => {\n            console.log(res);\n          }).then(json => setProject(json));\n          //   const response = await fetch(\"http://localhost:5000/learn\", {\n          //     method: \"POST\",\n          //     headers: {\n          //       'Content-Type' : 'application/json'\n          //     },\n          //     body: JSON.stringify(to_post)\n          //   })\n          //   .then(response => response.json())\n          //   .then(response => PresentResponse(response))\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(FormText, {\n        children: project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(GridBasicExample, \"wo+i8WPIbHZwukEXY8/bZXlTU6E=\");\n_c = GridBasicExample;\nexport default GridBasicExample;\nvar _c;\n$RefreshReg$(_c, \"GridBasicExample\");","map":{"version":3,"names":["Button","Col","Form","Row","RangeSlider","React","useState","PresentResponse","FormText","jsxDEV","_jsxDEV","GridBasicExample","_s","value","setValue","type","setType","project","setProject","id","children","Text","fileName","_jsxFileName","lineNumber","columnNumber","Select","Group","step","min","max","onChange","e","target","xs","Control","Check","label","onClick","event","preventDefault","requestOptions","method","headers","body","JSON","stringify","title","fetch","then","res","console","log","json","_c","$RefreshReg$"],"sources":["/media/nlonyuk/Ubuntu/tu/nlp/nlp_demo/frontend/src/Form.js"],"sourcesContent":["import \"./Form.css\"\nimport Button from \"react-bootstrap/esm/Button\";\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport React, { useState } from 'react';\n\nimport PresentResponse from './Response'\nimport FormText from \"react-bootstrap/esm/FormText\";\n\nfunction GridBasicExample() {\n\n    const [value, setValue] = React.useState(70);\n    const [type, setType] = React.useState([])\n    const [project, setProject] = useState([]);\n    const [PresentResponse] = useState([]);\n\n\n  return (\n    <Form id=\"MainForm\">\n      <Row>\n        <Form.Text>\n        Select model\n        </Form.Text>\n      </Row>\n      <Row>\n      <Form.Select>\n        <option value=\"Model1\">Model1</option>\n        <option value=\"Model2\">Model2</option>\n        <option value=\"Model3\">Model3</option>\n      </Form.Select>\n      </Row>\n      <Row>\n        <Form.Text>\n            Select # of samples to train from\n        </Form.Text>\n      </Row>\n      <Row>\n        <Col>\n        <Form.Group>\n            <RangeSlider\n            value={value}\n            step={10}\n            min={0}\n            max={100}\n            onChange={e => setValue(e.target.value)}\n            />\n        </Form.Group>\n        </Col>\n        <Col xs=\"3\">\n          <Form.Control value={value}/>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n            <Form.Text>\n                Select tasks\n            </Form.Text>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n            <Form.Check \n                type=\"switch\"\n                id=\"task1-switch\"\n                label=\"Task1\"\n            />\n        </Col>\n        <Col>\n            <Form.Check \n                type=\"switch\"\n                id=\"task2-switch\"\n                label=\"Task2\"\n            />\n        </Col>\n        <Col>\n            <Form.Check \n                type=\"switch\"\n                id=\"task3-switch\"\n                label=\"Task3\"\n            />\n        </Col>\n      </Row>\n      <Row>\n        <Button\n        type=\"submit\" \n        value=\"Add Todo\"\n        onClick={async(event) => {\n          event.preventDefault();\n          const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title: 'React POST Request Example' })\n        };\n          fetch('https://reqres.in/api/posts', requestOptions)\n          .then((res) => {console.log(res)})\n          .then((json) => setProject(json));\n        //   const response = await fetch(\"http://localhost:5000/learn\", {\n        //     method: \"POST\",\n        //     headers: {\n        //       'Content-Type' : 'application/json'\n        //     },\n        //     body: JSON.stringify(to_post)\n        //   })\n        //   .then(response => response.json())\n        //   .then(response => PresentResponse(response))\n          \n        }}\n        >\n        </Button>\n      </Row>\n      <Row>\n        <FormText>\n          {project}\n        </FormText>\n      </Row>\n    </Form>\n  );\n}\n\nexport default GridBasicExample;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}