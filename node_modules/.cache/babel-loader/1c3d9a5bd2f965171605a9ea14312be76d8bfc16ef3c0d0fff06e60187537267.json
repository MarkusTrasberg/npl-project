{"ast":null,"code":"var _jsxFileName = \"/media/nlonyuk/Ubuntu/tu/nlp/nlp_demo/src/Form.js\";\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Range from 'react-bootstrap/FormRange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GridBasicExample() {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Select number of samples to use\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Range, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"switch\",\n          id: \"task1-switch\",\n          label: \"Task1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"switch\",\n          id: \"task2-switch\",\n          label: \"Task2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"switch\",\n          id: \"task3-switch\",\n          label: \"Task3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = GridBasicExample;\nexport default GridBasicExample;\nvar _c;\n$RefreshReg$(_c, \"GridBasicExample\");","map":{"version":3,"names":["Col","Form","Row","Range","jsxDEV","_jsxDEV","GridBasicExample","children","Label","fileName","_jsxFileName","lineNumber","columnNumber","Check","type","id","label","_c","$RefreshReg$"],"sources":["/media/nlonyuk/Ubuntu/tu/nlp/nlp_demo/src/Form.js"],"sourcesContent":["import Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Range from 'react-bootstrap/FormRange';\n\nfunction GridBasicExample() {\n  return (\n    <Form>\n      <Row>\n        <Col>\n            <Form.Label>Select number of samples to use</Form.Label>\n            <Form.Range />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n            <Form.Check \n                type=\"switch\"\n                id=\"task1-switch\"\n                label=\"Task1\"\n            />\n        </Col>\n        <Col>\n            <Form.Check \n                type=\"switch\"\n                id=\"task2-switch\"\n                label=\"Task2\"\n            />\n        </Col>\n        <Col>\n            <Form.Check \n                type=\"switch\"\n                id=\"task3-switch\"\n                label=\"Task3\"\n            />\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nexport default GridBasicExample;"],"mappings":";AAAA,OAAOA,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,KAAK,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,gBAAgBA,CAAA,EAAG;EAC1B,oBACED,OAAA,CAACJ,IAAI;IAAAM,QAAA,gBACHF,OAAA,CAACH,GAAG;MAAAK,QAAA,eACFF,OAAA,CAACL,GAAG;QAAAO,QAAA,gBACAF,OAAA,CAACJ,IAAI,CAACO,KAAK;UAAAD,QAAA,EAAC;QAA+B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACxDP,OAAA,CAACJ,IAAI,CAACE,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNP,OAAA,CAACH,GAAG;MAAAK,QAAA,gBACFF,OAAA,CAACL,GAAG;QAAAO,QAAA,eACAF,OAAA,CAACJ,IAAI,CAACY,KAAK;UACPC,IAAI,EAAC,QAAQ;UACbC,EAAE,EAAC,cAAc;UACjBC,KAAK,EAAC;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNP,OAAA,CAACL,GAAG;QAAAO,QAAA,eACAF,OAAA,CAACJ,IAAI,CAACY,KAAK;UACPC,IAAI,EAAC,QAAQ;UACbC,EAAE,EAAC,cAAc;UACjBC,KAAK,EAAC;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNP,OAAA,CAACL,GAAG;QAAAO,QAAA,eACAF,OAAA,CAACJ,IAAI,CAACY,KAAK;UACPC,IAAI,EAAC,QAAQ;UACbC,EAAE,EAAC,cAAc;UACjBC,KAAK,EAAC;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACK,EAAA,GAlCQX,gBAAgB;AAoCzB,eAAeA,gBAAgB;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}